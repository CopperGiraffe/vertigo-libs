package io.vertigo.orchestra.domain.schedule;

import io.vertigo.dynamo.domain.model.Entity;
import io.vertigo.dynamo.domain.model.URI;
import io.vertigo.dynamo.domain.model.VAccessor;
import io.vertigo.dynamo.domain.stereotype.Field;
import io.vertigo.dynamo.domain.util.DtObjectUtil;
import io.vertigo.lang.Generated;

/**
 * This class is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 */
@Generated
@io.vertigo.dynamo.domain.stereotype.DataSpace("orchestra")
public final class OJobSchedule implements Entity {
	private static final long serialVersionUID = 1L;

	private Long jscId;
	private java.time.ZonedDateTime scheduleDate;
	private String params;

	@io.vertigo.dynamo.domain.stereotype.Association(
			name = "A_JSC_JMO",
			fkFieldName = "JMO_ID",
			primaryDtDefinitionName = "DT_O_JOB_MODEL",
			primaryIsNavigable = true,
			primaryRole = "JobModel",
			primaryLabel = "JobModel",
			primaryMultiplicity = "1..1",
			foreignDtDefinitionName = "DT_O_JOB_SCHEDULE",
			foreignIsNavigable = false,
			foreignRole = "JobSchedule",
			foreignLabel = "JobSchedule",
			foreignMultiplicity = "0..*")
	private final VAccessor<io.vertigo.orchestra.domain.model.OJobModel> jmoIdAccessor = new VAccessor<>(io.vertigo.orchestra.domain.model.OJobModel.class, "JobModel");

	/** {@inheritDoc} */
	@Override
	public URI<OJobSchedule> getURI() {
		return DtObjectUtil.createURI(this);
	}
	
	/**
	 * Champ : ID.
	 * Récupère la valeur de la propriété 'id'.
	 * @return Long jscId <b>Obligatoire</b>
	 */
	@Field(domain = "DO_O_IDENTIFIANT", type = "ID", required = true, label = "id")
	public Long getJscId() {
		return jscId;
	}

	/**
	 * Champ : ID.
	 * Définit la valeur de la propriété 'id'.
	 * @param jscId Long <b>Obligatoire</b>
	 */
	public void setJscId(final Long jscId) {
		this.jscId = jscId;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'schedule date'.
	 * @return java.time.ZonedDateTime scheduleDate <b>Obligatoire</b>
	 */
	@Field(domain = "DO_O_TIMESTAMP", required = true, label = "schedule date")
	public java.time.ZonedDateTime getScheduleDate() {
		return scheduleDate;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'schedule date'.
	 * @param scheduleDate java.time.ZonedDateTime <b>Obligatoire</b>
	 */
	public void setScheduleDate(final java.time.ZonedDateTime scheduleDate) {
		this.scheduleDate = scheduleDate;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'init params as JSON'.
	 * @return String params <b>Obligatoire</b>
	 */
	@Field(domain = "DO_O_JSON_TEXT", required = true, label = "init params as JSON")
	public String getParams() {
		return params;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'init params as JSON'.
	 * @param params String <b>Obligatoire</b>
	 */
	public void setParams(final String params) {
		this.params = params;
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'JobModel'.
	 * @return Long jmoId <b>Obligatoire</b>
	 */
	@Field(domain = "DO_O_IDENTIFIANT", type = "FOREIGN_KEY", required = true, label = "JobModel")
	@Deprecated
	public Long getJmoId() {
		return (Long)  jmoIdAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'JobModel'.
	 * @param jmoId Long <b>Obligatoire</b>
	 */
	@Deprecated
	public void setJmoId(final Long jmoId) {
		jmoIdAccessor.setId(jmoId);
	}

 	/**
	 * Association : JobModel.
	 * @return l'accesseur vers la propriété 'JobModel'
	 */
	public VAccessor<io.vertigo.orchestra.domain.model.OJobModel> getJobModelAccessor() {
		return jmoIdAccessor;
	}
	
	@Deprecated
	public io.vertigo.orchestra.domain.model.OJobModel getJobModel() {
		// we keep the lazyness
		if (!jmoIdAccessor.isLoaded()) {
			jmoIdAccessor.load();
		}
		return jmoIdAccessor.get();
	}

	/**
	 * Retourne l'URI: JobModel.
	 * @return URI de l'association
	 */
	@Deprecated
	public io.vertigo.dynamo.domain.model.URI<io.vertigo.orchestra.domain.model.OJobModel> getJobModelURI() {
		return jmoIdAccessor.getURI();
	}
	
	/** {@inheritDoc} */
	@Override
	public String toString() {
		return DtObjectUtil.toString(this);
	}
}
