package io.vertigo.orchestra.domain.run;

import io.vertigo.dynamo.domain.model.Entity;
import io.vertigo.dynamo.domain.model.URI;
import io.vertigo.dynamo.domain.stereotype.Field;
import io.vertigo.dynamo.domain.util.DtObjectUtil;
import io.vertigo.lang.Generated;

/**
 * This class is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 */
@Generated
@io.vertigo.dynamo.domain.stereotype.DataSpace("orchestra")
public final class OJobRun implements Entity {
	private static final long serialVersionUID = 1L;

	private String jobId;
	private String status;
	private Long nodeId;
	private java.time.ZonedDateTime maxDate;
	private Integer maxRetry;
	private Integer currentTry;

	/** {@inheritDoc} */
	@Override
	public URI<OJobRun> getURI() {
		return DtObjectUtil.createURI(this);
	}
	
	/**
	 * Champ : ID.
	 * Récupère la valeur de la propriété 'Id'.
	 * @return String jobId <b>Obligatoire</b>
	 */
	@Field(domain = "DO_O_IDENTIFIANT_JOB", type = "ID", required = true, label = "Id")
	public String getJobId() {
		return jobId;
	}

	/**
	 * Champ : ID.
	 * Définit la valeur de la propriété 'Id'.
	 * @param jobId String <b>Obligatoire</b>
	 */
	public void setJobId(final String jobId) {
		this.jobId = jobId;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Exec status'.
	 * @return String status <b>Obligatoire</b>
	 */
	@Field(domain = "DO_O_STATUS_CODE", required = true, label = "Exec status")
	public String getStatus() {
		return status;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Exec status'.
	 * @param status String <b>Obligatoire</b>
	 */
	public void setStatus(final String status) {
		this.status = status;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Node Id'.
	 * @return Long nodeId <b>Obligatoire</b>
	 */
	@Field(domain = "DO_O_IDENTIFIANT", required = true, label = "Node Id")
	public Long getNodeId() {
		return nodeId;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Node Id'.
	 * @param nodeId Long <b>Obligatoire</b>
	 */
	public void setNodeId(final Long nodeId) {
		this.nodeId = nodeId;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Max date of the run'.
	 * @return java.time.ZonedDateTime maxDate <b>Obligatoire</b>
	 */
	@Field(domain = "DO_O_TIMESTAMP", required = true, label = "Max date of the run")
	public java.time.ZonedDateTime getMaxDate() {
		return maxDate;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Max date of the run'.
	 * @param maxDate java.time.ZonedDateTime <b>Obligatoire</b>
	 */
	public void setMaxDate(final java.time.ZonedDateTime maxDate) {
		this.maxDate = maxDate;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Max retry'.
	 * @return Integer maxRetry <b>Obligatoire</b>
	 */
	@Field(domain = "DO_O_INTEGER", required = true, label = "Max retry")
	public Integer getMaxRetry() {
		return maxRetry;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Max retry'.
	 * @param maxRetry Integer <b>Obligatoire</b>
	 */
	public void setMaxRetry(final Integer maxRetry) {
		this.maxRetry = maxRetry;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Current try'.
	 * @return Integer currentTry <b>Obligatoire</b>
	 */
	@Field(domain = "DO_O_INTEGER", required = true, label = "Current try")
	public Integer getCurrentTry() {
		return currentTry;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Current try'.
	 * @param currentTry Integer <b>Obligatoire</b>
	 */
	public void setCurrentTry(final Integer currentTry) {
		this.currentTry = currentTry;
	}
	
	/** {@inheritDoc} */
	@Override
	public String toString() {
		return DtObjectUtil.toString(this);
	}
}
