package io.vertigo.orchestra.dao.planification


create Task TK_GET_PROCESS_TO_EXECUTE {
	storeName : "orchestra"
    className : "io.vertigo.dynamox.task.TaskEngineSelect"
        request : "
        	select prp.*
        	from o_process_planification prp
        	where prp.SST_CD = 'RESERVED'
        	and prp.NOD_ID = #nodId#
        	
			"
	attribute dtcOProcessPlanification	 	{domain : DO_DT_O_PROCESS_PLANIFICATION_DTC		required:"true" 	inOut :"out"}
	attribute nodId	 	{domain : DO_O_IDENTIFIANT 		required:"true" 	inOut :"in"}
}


create Task TK_RESERVE_PROCESS_TO_EXECUTE {
	storeName : "orchestra"
    className : "io.vertigo.dynamox.task.TaskEngineProc"
        request : "
        	update o_process_planification
        	set SST_CD = 'RESERVED', NOD_ID = #nodId#
        	where (SST_CD = 'WAITING' and expected_time >= #lowerLimit# and expected_time <= #upperLimit#) 
        			or (SST_CD = 'RESCUED')
			"
	 attribute lowerLimit	 	{domain : DO_O_TIMESTAMP 		required:"true" 	inOut :"in"}
	 attribute upperLimit	 	{domain : DO_O_TIMESTAMP 		required:"true" 	inOut :"in"}
	 attribute nodId	 	{domain : DO_O_IDENTIFIANT 		required:"true" 	inOut :"in"}
}

create Task TK_GET_LAST_PLANIFICATION_BY_PRO_ID {
	storeName : "orchestra"
    className : "io.vertigo.dynamox.task.TaskEngineSelect"
        request : "
        	select prp.* from  o_process_planification prp
        	where prp.PRO_ID = (select pro.PRO_ID from o_process pro where pro.PRO_ID = #proId# for update) and prp.SST_CD = 'WAITING'
        	order by prp.expected_time desc
        	limit 1
			"
		attribute proId	 	{domain : DO_O_IDENTIFIANT 		required:"true" 	inOut :"in"}
		attribute dtOProcessPlanification	 	{domain : DO_DT_O_PROCESS_PLANIFICATION_DTO		required:"false" 	inOut :"out"}
}


create Task TK_GET_ALL_LAST_PAST_PLANIFICATIONS {
	storeName : "orchestra"
    className : "io.vertigo.dynamox.task.TaskEngineSelect"
        request : "
        	select prp.* from  o_process_planification prp
			where prp.expected_time < #currentDate# and prp.SST_CD = 'WAITING'
			for update
			
			"
		attribute currentDate 	{domain : DO_O_TIMESTAMP 			required:"true" 	inOut :"in"}
		attribute processPlanifications	 	{domain : DO_DT_O_PROCESS_PLANIFICATION_DTC		required:"true" 	inOut :"out"}
}


create Task TK_CLEAN_PLANIFICATIONS_ON_BOOT {
	storeName : "orchestra"
    className : "io.vertigo.dynamox.task.TaskEngineProc"
        request : "
        	update o_process_planification set 
			SST_CD = 'MISFIRED'
			where SST_CD = 'WAITING' and expected_time < #currentDate# and prp_id not in (select prp.PRP_ID from  o_process_planification prp
        	inner join (
				    select pro_id, max(expected_time) as MaxDate
				    from o_process_planification
				    group by pro_id
				) pp on pp.pro_id = prp.pro_id and pp.MaxDate = prp.expected_time)
			"
		attribute currentDate 	{domain : DO_O_TIMESTAMP 			required:"true" 	inOut :"in"}
}


create Task TK_CLEAN_FUTURE_PLANIFICATIONS {
	storeName : "orchestra"
    className : "io.vertigo.dynamox.task.TaskEngineProc"
        request : "
        	delete from o_process_planification prp
        	where prp.PRO_ID in (select pro.PRO_ID from o_process pro where pro.NAME = #processName#) and prp.SST_CD = 'WAITING' and prp.expected_time > current_timestamp
			"
	 attribute processName	 	{domain : DO_O_LIBELLE 		required:"true" 	inOut :"in"}
}









