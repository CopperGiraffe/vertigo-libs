package io.vertigo.orchestra.dao.schedule

create Task TK_GET_JOB_SCHEDULE_TO_RUN {
	storeName : "orchestra"
	className : "io.vertigo.dynamox.task.TaskEngineSelect"
	request : "
		SELECT JSC.*
			FROM O_JOB_SCHEDULE JSC
			JOIN O_JOB_MODEL JMO ON (JSC.JMO_ID = JMO.JMO_ID)
		WHERE JMO.ACTIVE = TRUE
			AND JSC.SCHEDULE_DATE <= #SCHEDULE_DATE# 
			AND (DATEDIFF('SECOND', JSC.SCHEDULE_DATE, #SCHEDULE_DATE#) < JMO.RUN_MAX_DELAY)
			AND NOT EXISTS (SELECT 1 
				FROM O_JOB_RUN JRN
				WHERE 
				/* already executed*/
				JRN.JOB_ID = 'SCH:' || to_char(JSC.JSC_ID) 
				OR 
				/*exclusive execution : an active job is still running*/
				(JRN.JMO_ID = JSC.JMO_ID AND JRN.ALIVE=TRUE) 
			)
		FOR UPDATE
 		"
/*							WHERE JRUN.JOB_ID = to_char(JSC.SCHEDULE_DATE , 'YYYY-MM-DD-HH24:MI:SS') || 'S' || to_char(JSC.JSC_ID)*/
	
	attribute SCHEDULE_INSTANT		{domain : DO_O_TIMESTAMP			notNull:"true" 	inOut :"in"}
	attribute DTO_O_JOB_SCHEDULE	{domain : DO_DT_O_JOB_SCHEDULE_DTC 	notNull:"true" 	inOut :"out"}
}

create Task TK_GET_JOB_CRON {
	storeName : "orchestra"
	className : "io.vertigo.dynamox.task.TaskEngineSelect"
	request : "
		SELECT JCR.*
			FROM O_JOB_CRON JCR
			JOIN O_JOB_MODEL JMO ON (JCR.JMO_ID = JMO.JMO_ID)
		WHERE JMO.ACTIVE = TRUE
			AND NOT EXISTS (SELECT 1 
				FROM O_JOB_RUN JRN
				WHERE 
				/*exclusive execution : an active job is still running*/
				(JRN.JMO_ID = JCR.JMO_ID AND JRN.ALIVE=TRUE) 
			)
		FOR UPDATE
 		"
	
	attribute DTO_O_JOB_CRON	{domain : DO_DT_O_JOB_CRON_DTC 			notNull:"true" 	inOut :"out"}
}
